/* Generated By:JavaCC: Do not edit this line. BasicParserConstants.java */
package de.haupz.basicode.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface BasicParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 2;
  /** RegularExpression Id. */
  int NUMBER = 3;
  /** RegularExpression Id. */
  int INTEGER = 4;
  /** RegularExpression Id. */
  int FLOAT = 5;
  /** RegularExpression Id. */
  int DIGIT = 6;
  /** RegularExpression Id. */
  int STRING = 7;
  /** RegularExpression Id. */
  int ABS = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int ASC = 10;
  /** RegularExpression Id. */
  int ATN = 11;
  /** RegularExpression Id. */
  int CHRS = 12;
  /** RegularExpression Id. */
  int COS = 13;
  /** RegularExpression Id. */
  int DATA = 14;
  /** RegularExpression Id. */
  int DEF = 15;
  /** RegularExpression Id. */
  int DIM = 16;
  /** RegularExpression Id. */
  int END = 17;
  /** RegularExpression Id. */
  int FN = 18;
  /** RegularExpression Id. */
  int FOR = 19;
  /** RegularExpression Id. */
  int GOSUB = 20;
  /** RegularExpression Id. */
  int GOTO = 21;
  /** RegularExpression Id. */
  int INT = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int INPUT = 24;
  /** RegularExpression Id. */
  int LEFTS = 25;
  /** RegularExpression Id. */
  int LEN = 26;
  /** RegularExpression Id. */
  int LET = 27;
  /** RegularExpression Id. */
  int LOG = 28;
  /** RegularExpression Id. */
  int MIDS = 29;
  /** RegularExpression Id. */
  int NEXT = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int ON = 32;
  /** RegularExpression Id. */
  int OR = 33;
  /** RegularExpression Id. */
  int PRINT = 34;
  /** RegularExpression Id. */
  int READ = 35;
  /** RegularExpression Id. */
  int REM = 36;
  /** RegularExpression Id. */
  int RESTORE = 37;
  /** RegularExpression Id. */
  int RETURN = 38;
  /** RegularExpression Id. */
  int RIGHTS = 39;
  /** RegularExpression Id. */
  int RUN = 40;
  /** RegularExpression Id. */
  int SGN = 41;
  /** RegularExpression Id. */
  int SIN = 42;
  /** RegularExpression Id. */
  int SQR = 43;
  /** RegularExpression Id. */
  int STEP = 44;
  /** RegularExpression Id. */
  int STOP = 45;
  /** RegularExpression Id. */
  int TAB = 46;
  /** RegularExpression Id. */
  int TAN = 47;
  /** RegularExpression Id. */
  int THEN = 48;
  /** RegularExpression Id. */
  int TO = 49;
  /** RegularExpression Id. */
  int VAL = 50;
  /** RegularExpression Id. */
  int IDENTIFIER = 51;
  /** RegularExpression Id. */
  int FNIDENTIFIER = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "<NUMBER>",
    "<INTEGER>",
    "<FLOAT>",
    "<DIGIT>",
    "<STRING>",
    "\"ABS\"",
    "\"AND\"",
    "\"ASC\"",
    "\"ATN\"",
    "\"CHR$\"",
    "\"COS\"",
    "\"DATA\"",
    "\"DEF\"",
    "\"DIM\"",
    "\"END\"",
    "\"FN\"",
    "\"FOR\"",
    "\"GOSUB\"",
    "\"GOTO\"",
    "\"INT\"",
    "\"IF\"",
    "\"INPUT\"",
    "\"LEFT$\"",
    "\"LEN\"",
    "\"LET\"",
    "\"LOG\"",
    "\"MID$\"",
    "\"NEXT\"",
    "\"NOT\"",
    "\"ON\"",
    "\"OR\"",
    "\"PRINT\"",
    "\"READ\"",
    "<REM>",
    "\"RESTORE\"",
    "\"RETURN\"",
    "\"RIGHT$\"",
    "\"RUN\"",
    "\"SGN\"",
    "\"SIN\"",
    "\"SQR\"",
    "\"STEP\"",
    "\"STOP\"",
    "\"TAB\"",
    "\"TAN\"",
    "\"THEN\"",
    "\"TO\"",
    "\"VAL\"",
    "<IDENTIFIER>",
    "<FNIDENTIFIER>",
    "\":\"",
    "\",\"",
    "\"-\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
  };

}
